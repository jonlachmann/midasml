// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// prox_sgl
Rcpp::List prox_sgl(int nobs, Eigen::MatrixXd& x, Eigen::VectorXd& r, Eigen::VectorXd b, double al, double gamma, Eigen::VectorXd pf, double peps, double gw, double step);
RcppExport SEXP _midasml_prox_sgl(SEXP nobsSEXP, SEXP xSEXP, SEXP rSEXP, SEXP bSEXP, SEXP alSEXP, SEXP gammaSEXP, SEXP pfSEXP, SEXP pepsSEXP, SEXP gwSEXP, SEXP stepSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type nobs(nobsSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd& >::type x(xSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd& >::type r(rSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type al(alSEXP);
    Rcpp::traits::input_parameter< double >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type pf(pfSEXP);
    Rcpp::traits::input_parameter< double >::type peps(pepsSEXP);
    Rcpp::traits::input_parameter< double >::type gw(gwSEXP);
    Rcpp::traits::input_parameter< double >::type step(stepSEXP);
    rcpp_result_gen = Rcpp::wrap(prox_sgl(nobs, x, r, b, al, gamma, pf, peps, gw, step));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_midasml_prox_sgl", (DL_FUNC) &_midasml_prox_sgl, 10},
    {NULL, NULL, 0}
};

RcppExport void R_init_midasml(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
